{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "dc40c48b-0c95-4757-a067-563cfccd51a5",
   "metadata": {
    "tags": []
   },
   "source": [
    "# Task 1a: Perform Text Generation\n",
    "\n",
    "In this notebook, you learn how to use Large Language Model (LLM) to generate an email response to a customer who provided negative feedback on the quality of customer service they received from the support engineer. In this notebook, you generate an email with a thank you note based on the customer's previous email. You use the Amazon Nova Lite model using the Amazon Bedrock API with Boto3 client.\n",
    "\n",
    "The prompt used in this task is called a zero-shot prompt. In a zero-shot prompt, you describe the task or desired output to the language model in plain language. The model then uses its pre-trained knowledge and capabilities to generate a response or complete the task based solely on the provided prompt."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c9a413e2-3c34-4073-9000-d8556537bb6a",
   "metadata": {},
   "source": [
    "#### Scenario\n",
    "You are Bob a Customer Service Manager at AnyCompany and some of your customers are not happy with the customer service and are providing negative feedbacks on the service provided by customer support engineers. Now, you would like to respond to those customers apologizing for the poor service and to regain trust. You need the help of an LLM to generate a bulk of emails for you which are human friendly and personalized to the customer's sentiment from previous email correspondence."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8e2797f9",
   "metadata": {},
   "source": [
    "## Task 1a.1: Environment setup\n",
    "\n",
    "In this task, you set up your environment."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "776fd083",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-09-27T21:40:40.768677Z",
     "iopub.status.busy": "2025-09-27T21:40:40.768139Z",
     "iopub.status.idle": "2025-09-27T21:40:40.777181Z",
     "shell.execute_reply": "2025-09-27T21:40:40.776439Z",
     "shell.execute_reply.started": "2025-09-27T21:40:40.768633Z"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "#Create a service client by name using the default session.\n",
    "import json\n",
    "import os\n",
    "import sys\n",
    "\n",
    "import boto3\n",
    "import botocore\n",
    "\n",
    "module_path = \"..\"\n",
    "sys.path.append(os.path.abspath(module_path))\n",
    "\n",
    "bedrock_client = boto3.client('bedrock-runtime',region_name=os.environ.get(\"AWS_DEFAULT_REGION\", None))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4f634211-3de1-4390-8c3f-367af5554c39",
   "metadata": {},
   "source": [
    "## Task 1a.2: Generate text\n",
    "\n",
    "In this task, you prepare an input for the Amazon Bedrock service to generate an email."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "45ee2bae-6415-4dba-af98-a19028305c98",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-09-27T21:40:47.842006Z",
     "iopub.status.busy": "2025-09-27T21:40:47.841730Z",
     "iopub.status.idle": "2025-09-27T21:40:47.845679Z",
     "shell.execute_reply": "2025-09-27T21:40:47.844794Z",
     "shell.execute_reply.started": "2025-09-27T21:40:47.841985Z"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# create the prompt\n",
    "prompt_data = \"\"\"\n",
    "Command: Write an email from Bob, Customer Service Manager, AnyCompany to the customer \"John Doe\" \n",
    "who provided negative feedback on the service provided by our customer support \n",
    "engineer\"\"\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "8af670eb-ad02-40df-a19c-3ed835fac8d9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-09-27T21:40:51.346075Z",
     "iopub.status.busy": "2025-09-27T21:40:51.345807Z",
     "iopub.status.idle": "2025-09-27T21:40:51.349549Z",
     "shell.execute_reply": "2025-09-27T21:40:51.348736Z",
     "shell.execute_reply.started": "2025-09-27T21:40:51.346055Z"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "body = json.dumps({\n",
    "    \"messages\": [\n",
    "        {\n",
    "            \"role\": \"user\",\n",
    "            \"content\": [{\"text\": prompt_data}]\n",
    "        }\n",
    "    ],\n",
    "    \"inferenceConfig\": {\n",
    "        \"maxTokens\": 8192,\n",
    "        \"stopSequences\": [],\n",
    "        \"temperature\": 0,\n",
    "        \"topP\": 0.9\n",
    "    }\n",
    "}) "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "48e1a37c",
   "metadata": {},
   "source": [
    "Next, you use the Amazon Nova Lite model.\n",
    "\n",
    "<i aria-hidden=\"true\" class=\"fas fa-sticky-note\" style=\"color:#563377\"></i> **Note:** Amazon Nova Lite supports a context window of ~300k tokens and accepts the following parameters:\n",
    "- `messages`: Array of message objects with role and content\n",
    "- `inferenceConfig`: These are the parameters that model will take into account while generating the output."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c4ca6751",
   "metadata": {},
   "source": [
    "The Amazon Bedrock API provides you with an API `invoke_model` which accepts the following:\n",
    "- `modelId`: This is the model ARN for the various foundation models available under Amazon Bedrock\n",
    "- `accept`: The type of input request\n",
    "- `contentType`: The content type of the output\n",
    "- `body`: A json string consisting of the prompt and the configurations\n",
    "\n",
    "Refer to [documentation](https://docs.aws.amazon.com/bedrock/latest/userguide/model-ids-arns.html) for Available text generation model Ids."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "088cf6bf-dd73-4710-a0cc-6c11d220c431",
   "metadata": {},
   "source": [
    "## Task 1a.3: Invoke the Amazon Nova Lite language model\n",
    "\n",
    "In this task, you explore how the model generates an output based on the prompt created earlier."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "379498f2",
   "metadata": {},
   "source": [
    "### Complete Output Generation\n",
    "\n",
    "This email is generated using the Amazon Nova Lite model by understanding the input request and utilizing its inherent understanding of different modalities. The request to the API is synchronous and waits for the entire output to be generated by the model."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "ecaceef1-0f7f-4ae5-8007-ff7c25335251",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-09-27T21:41:12.888370Z",
     "iopub.status.busy": "2025-09-27T21:41:12.888105Z",
     "iopub.status.idle": "2025-09-27T21:41:14.964502Z",
     "shell.execute_reply": "2025-09-27T21:41:14.963774Z",
     "shell.execute_reply.started": "2025-09-27T21:41:12.888348Z"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "#invoke model\n",
    "modelId = 'amazon.nova-lite-v1:0' # change this to use a different version from the model provider\n",
    "accept = 'application/json'\n",
    "contentType = 'application/json'\n",
    "outputText = \"\\n\"\n",
    "try:\n",
    "\n",
    "    response = bedrock_client.invoke_model(body=body, modelId=modelId, accept=accept, contentType=contentType)\n",
    "    response_body = json.loads(response.get('body').read())\n",
    "\n",
    "    outputText = response_body.get('output').get('message').get('content')[0].get('text')\n",
    "\n",
    "except botocore.exceptions.ClientError as error:\n",
    "    \n",
    "    if error.response['Error']['Code'] == 'AccessDeniedException':\n",
    "           print(f\"\\x1b[41m{error.response['Error']['Message']}\\\n",
    "                \\nTo troubeshoot this issue please refer to the following resources.\\\n",
    "                 \\nhttps://docs.aws.amazon.com/IAM/latest/UserGuide/troubleshoot_access-denied.html\\\n",
    "                 \\nhttps://docs.aws.amazon.com/bedrock/latest/userguide/security-iam.html\\x1b[0m\\n\")\n",
    "        \n",
    "    else:\n",
    "        raise error\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "3748383a-c140-407f-a7f6-8f140ad57680",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-09-27T21:41:19.634764Z",
     "iopub.status.busy": "2025-09-27T21:41:19.634502Z",
     "iopub.status.idle": "2025-09-27T21:41:19.638213Z",
     "shell.execute_reply": "2025-09-27T21:41:19.637443Z",
     "shell.execute_reply.started": "2025-09-27T21:41:19.634745Z"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Subject: Addressing Your Recent Feedback and Our Commitment to Improvement\n",
      "\n",
      "Dear John Doe,\n",
      "\n",
      "I hope this email finds you well.\n",
      "\n",
      "Firstly, I would like to extend my sincere apologies for any inconvenience or frustration you experienced during your recent interaction with our customer support team. At AnyCompany, we strive to provide exceptional service and support to our valued customers, and it is clear that we fell short of your expectations on this occasion.\n",
      "\n",
      "Your feedback is incredibly important to us, and it has been brought to my attention. I take such concerns very seriously and want to assure you that we are committed to addressing the issues you have raised and making improvements where necessary.\n",
      "\n",
      "To better understand the specific concerns you encountered, I would appreciate it if you could provide more details about your experience. This will help us to investigate the matter thoroughly and take appropriate action. Please feel free to reply to this email or contact our support team directly at [support email/phone number] with any additional information you think is relevant.\n",
      "\n",
      "In the meantime, I would like to personally reach out to you to ensure that any outstanding issues are resolved to your satisfaction. If you would be willing, I would be happy to schedule a call or meeting at your earliest convenience to discuss your concerns further and explore potential solutions.\n",
      "\n",
      "We value your business and your satisfaction is our top priority. Your feedback is a crucial part of our continuous improvement process, and we are dedicated to making sure that you have a positive experience with AnyCompany moving forward.\n",
      "\n",
      "Thank you for bringing this to our attention, and for your continued trust in our services. We look forward to resolving this matter and restoring your confidence in our support.\n",
      "\n",
      "Warm regards,\n",
      "\n",
      "Bob [Last Name]  \n",
      "Customer Service Manager  \n",
      "AnyCompany  \n",
      "[Contact Information]  \n",
      "[Company Website]  \n",
      "\n",
      "---\n",
      "\n",
      "Please do not hesitate to reach out if you have any further questions or need additional assistance.\n",
      "\n",
      "Best regards,\n",
      "\n",
      "Bob [Last Name]\n"
     ]
    }
   ],
   "source": [
    "# Print the complete response from Nova Lite\n",
    "print(outputText)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2d69e1a0",
   "metadata": {},
   "source": [
    "### Streaming Output Generation\n",
    "\n",
    "Bedrock also supports that the output can be streamed as it is generated by the model in form of chunks. This email is generated by invoking the model with streaming option. `invoke_model_with_response_stream` returns a `ResponseStream` which you can read from."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "ad073290",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-09-27T21:41:30.719200Z",
     "iopub.status.busy": "2025-09-27T21:41:30.718902Z",
     "iopub.status.idle": "2025-09-27T21:41:32.731606Z",
     "shell.execute_reply": "2025-09-27T21:41:32.730909Z",
     "shell.execute_reply.started": "2025-09-27T21:41:30.719177Z"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\t\t\u001b[31m**Chunk 1**\u001b[0m\n",
      "Subject\n",
      "\n",
      "\t\t\u001b[31m**Chunk 2**\u001b[0m\n",
      ": Addressing\n",
      "\n",
      "\t\t\u001b[31m**Chunk 3**\u001b[0m\n",
      " Your\n",
      "\n",
      "\t\t\u001b[31m**Chunk 4**\u001b[0m\n",
      " Recent\n",
      "\n",
      "\t\t\u001b[31m**Chunk 5**\u001b[0m\n",
      " Feedback\n",
      "\n",
      "\t\t\u001b[31m**Chunk 6**\u001b[0m\n",
      " and Our\n",
      "\n",
      "\t\t\u001b[31m**Chunk 7**\u001b[0m\n",
      " Commitment to Improvement\n",
      "\n",
      "\t\t\u001b[31m**Chunk 8**\u001b[0m\n",
      "\n",
      "\n",
      "Dear John Doe,\n",
      "\n",
      "\n",
      "\n",
      "\t\t\u001b[31m**Chunk 9**\u001b[0m\n",
      "I hope this\n",
      "\n",
      "\t\t\u001b[31m**Chunk 10**\u001b[0m\n",
      " email\n",
      "\n",
      "\t\t\u001b[31m**Chunk 11**\u001b[0m\n",
      " finds you well\n",
      "\n",
      "\t\t\u001b[31m**Chunk 12**\u001b[0m\n",
      ".\n",
      "\n",
      "\n",
      "\n",
      "\t\t\u001b[31m**Chunk 13**\u001b[0m\n",
      "First\n",
      "\n",
      "\t\t\u001b[31m**Chunk 14**\u001b[0m\n",
      "ly\n",
      "\n",
      "\t\t\u001b[31m**Chunk 15**\u001b[0m\n",
      ", I would\n",
      "\n",
      "\t\t\u001b[31m**Chunk 16**\u001b[0m\n",
      " like to extend\n",
      "\n",
      "\t\t\u001b[31m**Chunk 17**\u001b[0m\n",
      " my sincere apologies\n",
      "\n",
      "\t\t\u001b[31m**Chunk 18**\u001b[0m\n",
      " for the experience\n",
      "\n",
      "\t\t\u001b[31m**Chunk 19**\u001b[0m\n",
      " you had\n",
      "\n",
      "\t\t\u001b[31m**Chunk 20**\u001b[0m\n",
      " with\n",
      "\n",
      "\t\t\u001b[31m**Chunk 21**\u001b[0m\n",
      " our customer support\n",
      "\n",
      "\t\t\u001b[31m**Chunk 22**\u001b[0m\n",
      " team. I understand\n",
      "\n",
      "\t\t\u001b[31m**Chunk 23**\u001b[0m\n",
      " that your\n",
      "\n",
      "\t\t\u001b[31m**Chunk 24**\u001b[0m\n",
      " recent interaction\n",
      "\n",
      "\t\t\u001b[31m**Chunk 25**\u001b[0m\n",
      " did\n",
      "\n",
      "\t\t\u001b[31m**Chunk 26**\u001b[0m\n",
      " not meet your\n",
      "\n",
      "\t\t\u001b[31m**Chunk 27**\u001b[0m\n",
      " expectations,\n",
      "\n",
      "\t\t\u001b[31m**Chunk 28**\u001b[0m\n",
      " and for\n",
      "\n",
      "\t\t\u001b[31m**Chunk 29**\u001b[0m\n",
      " that, I am\n",
      "\n",
      "\t\t\u001b[31m**Chunk 30**\u001b[0m\n",
      " truly\n",
      "\n",
      "\t\t\u001b[31m**Chunk 31**\u001b[0m\n",
      " sorry.\n",
      "\n",
      "\t\t\u001b[31m**Chunk 32**\u001b[0m\n",
      " Customer\n",
      "\n",
      "\t\t\u001b[31m**Chunk 33**\u001b[0m\n",
      " satisfaction is of\n",
      "\n",
      "\t\t\u001b[31m**Chunk 34**\u001b[0m\n",
      " utmost\n",
      "\n",
      "\t\t\u001b[31m**Chunk 35**\u001b[0m\n",
      " importance to\n",
      "\n",
      "\t\t\u001b[31m**Chunk 36**\u001b[0m\n",
      " us,\n",
      "\n",
      "\t\t\u001b[31m**Chunk 37**\u001b[0m\n",
      " and it\n",
      "\n",
      "\t\t\u001b[31m**Chunk 38**\u001b[0m\n",
      " is clear\n",
      "\n",
      "\t\t\u001b[31m**Chunk 39**\u001b[0m\n",
      " that we fell\n",
      "\n",
      "\t\t\u001b[31m**Chunk 40**\u001b[0m\n",
      " short in this\n",
      "\n",
      "\t\t\u001b[31m**Chunk 41**\u001b[0m\n",
      " instance\n",
      "\n",
      "\t\t\u001b[31m**Chunk 42**\u001b[0m\n",
      ".\n",
      "\n",
      "We\n",
      "\n",
      "\t\t\u001b[31m**Chunk 43**\u001b[0m\n",
      " take\n",
      "\n",
      "\t\t\u001b[31m**Chunk 44**\u001b[0m\n",
      " your\n",
      "\n",
      "\t\t\u001b[31m**Chunk 45**\u001b[0m\n",
      " feedback very seriously and are committed\n",
      "\n",
      "\t\t\u001b[31m**Chunk 46**\u001b[0m\n",
      " to making\n",
      "\n",
      "\t\t\u001b[31m**Chunk 47**\u001b[0m\n",
      " things\n",
      "\n",
      "\t\t\u001b[31m**Chunk 48**\u001b[0m\n",
      " right\n",
      "\n",
      "\t\t\u001b[31m**Chunk 49**\u001b[0m\n",
      ". Your\n",
      "\n",
      "\t\t\u001b[31m**Chunk 50**\u001b[0m\n",
      " input\n",
      "\n",
      "\t\t\u001b[31m**Chunk 51**\u001b[0m\n",
      " is invaluable\n",
      "\n",
      "\t\t\u001b[31m**Chunk 52**\u001b[0m\n",
      " as\n",
      "\n",
      "\t\t\u001b[31m**Chunk 53**\u001b[0m\n",
      " it helps\n",
      "\n",
      "\t\t\u001b[31m**Chunk 54**\u001b[0m\n",
      " us identify\n",
      "\n",
      "\t\t\u001b[31m**Chunk 55**\u001b[0m\n",
      " areas where we can improve our\n",
      "\n",
      "\t\t\u001b[31m**Chunk 56**\u001b[0m\n",
      " services.\n",
      "\n",
      "\t\t\u001b[31m**Chunk 57**\u001b[0m\n",
      " I\n",
      "\n",
      "\t\t\u001b[31m**Chunk 58**\u001b[0m\n",
      " have reviewed\n",
      "\n",
      "\t\t\u001b[31m**Chunk 59**\u001b[0m\n",
      " the details of\n",
      "\n",
      "\t\t\u001b[31m**Chunk 60**\u001b[0m\n",
      " your feedback and\n",
      "\n",
      "\t\t\u001b[31m**Chunk 61**\u001b[0m\n",
      " would like\n",
      "\n",
      "\t\t\u001b[31m**Chunk 62**\u001b[0m\n",
      " to discuss\n",
      "\n",
      "\t\t\u001b[31m**Chunk 63**\u001b[0m\n",
      " them\n",
      "\n",
      "\t\t\u001b[31m**Chunk 64**\u001b[0m\n",
      " further to\n",
      "\n",
      "\t\t\u001b[31m**Chunk 65**\u001b[0m\n",
      " understand the specific\n",
      "\n",
      "\t\t\u001b[31m**Chunk 66**\u001b[0m\n",
      " issues you encountered\n",
      "\n",
      "\t\t\u001b[31m**Chunk 67**\u001b[0m\n",
      ".\n",
      "\n",
      "To\n",
      "\n",
      "\t\t\u001b[31m**Chunk 68**\u001b[0m\n",
      " address\n",
      "\n",
      "\t\t\u001b[31m**Chunk 69**\u001b[0m\n",
      " your\n",
      "\n",
      "\t\t\u001b[31m**Chunk 70**\u001b[0m\n",
      " concerns, I have\n",
      "\n",
      "\t\t\u001b[31m**Chunk 71**\u001b[0m\n",
      " taken\n",
      "\n",
      "\t\t\u001b[31m**Chunk 72**\u001b[0m\n",
      " the following steps\n",
      "\n",
      "\t\t\u001b[31m**Chunk 73**\u001b[0m\n",
      ":\n",
      "\n",
      "1. **Immediate\n",
      "\n",
      "\t\t\u001b[31m**Chunk 74**\u001b[0m\n",
      " Review**: We have initiated\n",
      "\n",
      "\t\t\u001b[31m**Chunk 75**\u001b[0m\n",
      " a\n",
      "\n",
      "\t\t\u001b[31m**Chunk 76**\u001b[0m\n",
      " thorough\n",
      "\n",
      "\t\t\u001b[31m**Chunk 77**\u001b[0m\n",
      " review of the interaction\n",
      "\n",
      "\t\t\u001b[31m**Chunk 78**\u001b[0m\n",
      " to\n",
      "\n",
      "\t\t\u001b[31m**Chunk 79**\u001b[0m\n",
      " identify\n",
      "\n",
      "\t\t\u001b[31m**Chunk 80**\u001b[0m\n",
      " where\n",
      "\n",
      "\t\t\u001b[31m**Chunk 81**\u001b[0m\n",
      " we\n",
      "\n",
      "\t\t\u001b[31m**Chunk 82**\u001b[0m\n",
      " went wrong.\n",
      "2\n",
      "\n",
      "\t\t\u001b[31m**Chunk 83**\u001b[0m\n",
      ". **Training\n",
      "\n",
      "\t\t\u001b[31m**Chunk 84**\u001b[0m\n",
      " and\n",
      "\n",
      "\t\t\u001b[31m**Chunk 85**\u001b[0m\n",
      " Development\n",
      "\n",
      "\t\t\u001b[31m**Chunk 86**\u001b[0m\n",
      "**: We\n",
      "\n",
      "\t\t\u001b[31m**Chunk 87**\u001b[0m\n",
      " are\n",
      "\n",
      "\t\t\u001b[31m**Chunk 88**\u001b[0m\n",
      " enhancing\n",
      "\n",
      "\t\t\u001b[31m**Chunk 89**\u001b[0m\n",
      " our training\n",
      "\n",
      "\t\t\u001b[31m**Chunk 90**\u001b[0m\n",
      " programs to ensure\n",
      "\n",
      "\t\t\u001b[31m**Chunk 91**\u001b[0m\n",
      " that our support\n",
      "\n",
      "\t\t\u001b[31m**Chunk 92**\u001b[0m\n",
      " engineers\n",
      "\n",
      "\t\t\u001b[31m**Chunk 93**\u001b[0m\n",
      " are\n",
      "\n",
      "\t\t\u001b[31m**Chunk 94**\u001b[0m\n",
      " better\n",
      "\n",
      "\t\t\u001b[31m**Chunk 95**\u001b[0m\n",
      " equipped to\n",
      "\n",
      "\t\t\u001b[31m**Chunk 96**\u001b[0m\n",
      " handle customer queries\n",
      "\n",
      "\t\t\u001b[31m**Chunk 97**\u001b[0m\n",
      " effectively\n",
      "\n",
      "\t\t\u001b[31m**Chunk 98**\u001b[0m\n",
      ".\n",
      "\n",
      "\n",
      "\t\t\u001b[31m**Chunk 99**\u001b[0m\n",
      "3. **Personal\n",
      "\n",
      "\t\t\u001b[31m**Chunk 100**\u001b[0m\n",
      " Follow-Up\n",
      "\n",
      "\t\t\u001b[31m**Chunk 101**\u001b[0m\n",
      "**: I\n",
      "\n",
      "\t\t\u001b[31m**Chunk 102**\u001b[0m\n",
      " will personally\n",
      "\n",
      "\t\t\u001b[31m**Chunk 103**\u001b[0m\n",
      " oversee\n",
      "\n",
      "\t\t\u001b[31m**Chunk 104**\u001b[0m\n",
      " the\n",
      "\n",
      "\t\t\u001b[31m**Chunk 105**\u001b[0m\n",
      " resolution of your\n",
      "\n",
      "\t\t\u001b[31m**Chunk 106**\u001b[0m\n",
      " issues and ensure that you\n",
      "\n",
      "\t\t\u001b[31m**Chunk 107**\u001b[0m\n",
      " receive prompt\n",
      "\n",
      "\t\t\u001b[31m**Chunk 108**\u001b[0m\n",
      " and satisfactory\n",
      "\n",
      "\t\t\u001b[31m**Chunk 109**\u001b[0m\n",
      " assistance\n",
      "\n",
      "\t\t\u001b[31m**Chunk 110**\u001b[0m\n",
      " moving\n",
      "\n",
      "\t\t\u001b[31m**Chunk 111**\u001b[0m\n",
      " forward.\n",
      "\n",
      "Additional\n",
      "\n",
      "\t\t\u001b[31m**Chunk 112**\u001b[0m\n",
      "ly, I\n",
      "\n",
      "\t\t\u001b[31m**Chunk 113**\u001b[0m\n",
      " would like\n",
      "\n",
      "\t\t\u001b[31m**Chunk 114**\u001b[0m\n",
      " to invite\n",
      "\n",
      "\t\t\u001b[31m**Chunk 115**\u001b[0m\n",
      " you to speak\n",
      "\n",
      "\t\t\u001b[31m**Chunk 116**\u001b[0m\n",
      " directly\n",
      "\n",
      "\t\t\u001b[31m**Chunk 117**\u001b[0m\n",
      " with our\n",
      "\n",
      "\t\t\u001b[31m**Chunk 118**\u001b[0m\n",
      " senior\n",
      "\n",
      "\t\t\u001b[31m**Chunk 119**\u001b[0m\n",
      " customer service representatives\n",
      "\n",
      "\t\t\u001b[31m**Chunk 120**\u001b[0m\n",
      " who can provide you\n",
      "\n",
      "\t\t\u001b[31m**Chunk 121**\u001b[0m\n",
      " with further\n",
      "\n",
      "\t\t\u001b[31m**Chunk 122**\u001b[0m\n",
      " assistance and ensure\n",
      "\n",
      "\t\t\u001b[31m**Chunk 123**\u001b[0m\n",
      " that all\n",
      "\n",
      "\t\t\u001b[31m**Chunk 124**\u001b[0m\n",
      " your concerns are addressed\n",
      "\n",
      "\t\t\u001b[31m**Chunk 125**\u001b[0m\n",
      ".\n",
      "\n",
      "\t\t\u001b[31m**Chunk 126**\u001b[0m\n",
      " Please\n",
      "\n",
      "\t\t\u001b[31m**Chunk 127**\u001b[0m\n",
      " let\n",
      "\n",
      "\t\t\u001b[31m**Chunk 128**\u001b[0m\n",
      " me know a\n",
      "\n",
      "\t\t\u001b[31m**Chunk 129**\u001b[0m\n",
      " convenient time for\n",
      "\n",
      "\t\t\u001b[31m**Chunk 130**\u001b[0m\n",
      " you to connect\n",
      "\n",
      "\t\t\u001b[31m**Chunk 131**\u001b[0m\n",
      ",\n",
      "\n",
      "\t\t\u001b[31m**Chunk 132**\u001b[0m\n",
      " and I\n",
      "\n",
      "\t\t\u001b[31m**Chunk 133**\u001b[0m\n",
      " will arrange\n",
      "\n",
      "\t\t\u001b[31m**Chunk 134**\u001b[0m\n",
      " a\n",
      "\n",
      "\t\t\u001b[31m**Chunk 135**\u001b[0m\n",
      " call at\n",
      "\n",
      "\t\t\u001b[31m**Chunk 136**\u001b[0m\n",
      " your earliest\n",
      "\n",
      "\t\t\u001b[31m**Chunk 137**\u001b[0m\n",
      " convenience.\n",
      "\n",
      "We\n",
      "\n",
      "\t\t\u001b[31m**Chunk 138**\u001b[0m\n",
      " value\n",
      "\n",
      "\t\t\u001b[31m**Chunk 139**\u001b[0m\n",
      " your business\n",
      "\n",
      "\t\t\u001b[31m**Chunk 140**\u001b[0m\n",
      " and appreciate\n",
      "\n",
      "\t\t\u001b[31m**Chunk 141**\u001b[0m\n",
      " your\n",
      "\n",
      "\t\t\u001b[31m**Chunk 142**\u001b[0m\n",
      " patience\n",
      "\n",
      "\t\t\u001b[31m**Chunk 143**\u001b[0m\n",
      " as\n",
      "\n",
      "\t\t\u001b[31m**Chunk 144**\u001b[0m\n",
      " we work\n",
      "\n",
      "\t\t\u001b[31m**Chunk 145**\u001b[0m\n",
      " to resolve\n",
      "\n",
      "\t\t\u001b[31m**Chunk 146**\u001b[0m\n",
      " this\n",
      "\n",
      "\t\t\u001b[31m**Chunk 147**\u001b[0m\n",
      " matter\n",
      "\n",
      "\t\t\u001b[31m**Chunk 148**\u001b[0m\n",
      ". Your\n",
      "\n",
      "\t\t\u001b[31m**Chunk 149**\u001b[0m\n",
      " satisfaction\n",
      "\n",
      "\t\t\u001b[31m**Chunk 150**\u001b[0m\n",
      " is our\n",
      "\n",
      "\t\t\u001b[31m**Chunk 151**\u001b[0m\n",
      " top\n",
      "\n",
      "\t\t\u001b[31m**Chunk 152**\u001b[0m\n",
      " priority, and we are dedicated\n",
      "\n",
      "\t\t\u001b[31m**Chunk 153**\u001b[0m\n",
      " to restoring\n",
      "\n",
      "\t\t\u001b[31m**Chunk 154**\u001b[0m\n",
      " your confidence\n",
      "\n",
      "\t\t\u001b[31m**Chunk 155**\u001b[0m\n",
      " in our\n",
      "\n",
      "\t\t\u001b[31m**Chunk 156**\u001b[0m\n",
      " services\n",
      "\n",
      "\t\t\u001b[31m**Chunk 157**\u001b[0m\n",
      ".\n",
      "\n",
      "Thank you for bringing\n",
      "\n",
      "\t\t\u001b[31m**Chunk 158**\u001b[0m\n",
      " this\n",
      "\n",
      "\t\t\u001b[31m**Chunk 159**\u001b[0m\n",
      " to our\n",
      "\n",
      "\t\t\u001b[31m**Chunk 160**\u001b[0m\n",
      " attention. Please do\n",
      "\n",
      "\t\t\u001b[31m**Chunk 161**\u001b[0m\n",
      " not hesitate to reach\n",
      "\n",
      "\t\t\u001b[31m**Chunk 162**\u001b[0m\n",
      " out if you have\n",
      "\n",
      "\t\t\u001b[31m**Chunk 163**\u001b[0m\n",
      " any further questions or need\n",
      "\n",
      "\t\t\u001b[31m**Chunk 164**\u001b[0m\n",
      " additional assistance\n",
      "\n",
      "\t\t\u001b[31m**Chunk 165**\u001b[0m\n",
      ".\n",
      "\n",
      "Best regards,\n",
      "\n",
      "\n",
      "\n",
      "\t\t\u001b[31m**Chunk 166**\u001b[0m\n",
      "Bob\n",
      "\n",
      "\t\t\u001b[31m**Chunk 167**\u001b[0m\n",
      "  \n",
      "\n",
      "\n",
      "\t\t\u001b[31m**Chunk 168**\u001b[0m\n",
      "Customer Service Manager  \n",
      "\n",
      "\n",
      "\t\t\u001b[31m**Chunk 169**\u001b[0m\n",
      "Any\n",
      "\n",
      "\t\t\u001b[31m**Chunk 170**\u001b[0m\n",
      "Company  \n",
      "[Contact\n",
      "\n",
      "\t\t\u001b[31m**Chunk 171**\u001b[0m\n",
      " Information]  \n",
      "[Company\n",
      "\n",
      "\t\t\u001b[31m**Chunk 172**\u001b[0m\n",
      " Website\n",
      "\n",
      "\t\t\u001b[31m**Chunk 173**\u001b[0m\n",
      "]  \n",
      "\n",
      "---\n",
      "\n",
      "\n",
      "\n",
      "\t\t\u001b[31m**Chunk 174**\u001b[0m\n",
      "Feel\n",
      "\n",
      "\t\t\u001b[31m**Chunk 175**\u001b[0m\n",
      " free to adjust\n",
      "\n",
      "\t\t\u001b[31m**Chunk 176**\u001b[0m\n",
      " any\n",
      "\n",
      "\t\t\u001b[31m**Chunk 177**\u001b[0m\n",
      " details\n",
      "\n",
      "\t\t\u001b[31m**Chunk 178**\u001b[0m\n",
      " to\n",
      "\n",
      "\t\t\u001b[31m**Chunk 179**\u001b[0m\n",
      " better fit\n",
      "\n",
      "\t\t\u001b[31m**Chunk 180**\u001b[0m\n",
      " your specific needs or\n",
      "\n",
      "\t\t\u001b[31m**Chunk 181**\u001b[0m\n",
      " company\n",
      "\n",
      "\t\t\u001b[31m**Chunk 182**\u001b[0m\n",
      " policies.\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# invoke model with response stream\n",
    "output = []\n",
    "try:\n",
    "    \n",
    "    response = bedrock_client.invoke_model_with_response_stream(body=body, modelId=modelId, accept=accept, contentType=contentType)\n",
    "    stream = response.get('body')\n",
    "    \n",
    "    i = 1\n",
    "    if stream:\n",
    "        for event in stream:\n",
    "            chunk = event.get('chunk')\n",
    "            if chunk:\n",
    "                chunk_obj = json.loads(chunk.get('bytes').decode())\n",
    "                if 'contentBlockDelta' in chunk_obj:\n",
    "                    text = chunk_obj['contentBlockDelta']['delta']['text']\n",
    "                    output.append(text)\n",
    "                    print(f'\\t\\t\\x1b[31m**Chunk {i}**\\x1b[0m\\n{text}\\n')\n",
    "                    i+=1\n",
    "            \n",
    "except botocore.exceptions.ClientError as error:\n",
    "    \n",
    "    if error.response['Error']['Code'] == 'AccessDeniedException':\n",
    "           print(f\"\\x1b[41m{error.response['Error']['Message']}\\\n",
    "                \\nTo troubeshoot this issue please refer to the following resources.\\\n",
    "                 \\nhttps://docs.aws.amazon.com/IAM/latest/UserGuide/troubleshoot_access-denied.html\\\n",
    "                 \\nhttps://docs.aws.amazon.com/bedrock/latest/userguide/security-iam.html\\x1b[0m\\n\")\n",
    "        \n",
    "    else:\n",
    "        raise error"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9a788be5",
   "metadata": {},
   "source": [
    "The stream with response approach helps to quickly obtain the output of the model and allows the service to complete it as you read. This assists in use cases where you request the model to generate longer pieces of text. You can later combine all the chunks generated to form the complete output and use it for your use case. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "02d48c73",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "#combine output chunks\n",
    "print('\\t\\t\\x1b[31m**COMPLETE OUTPUT**\\x1b[0m\\n')\n",
    "complete_output = ''.join(output)\n",
    "print(complete_output)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "64b08b3b",
   "metadata": {},
   "source": [
    "\n",
    "You have now experimented with using the boto3 SDK, which provides basic exposure to the Amazon Bedrock API. Using this API, you have seen the use case of generating an email to respond to a customer's negative feedback.\n",
    "\n",
    "### Try it yourself\n",
    "- Change the prompts to your specific usecase and evaluate the output of different models.\n",
    "- Play with the token length to understand the latency and responsiveness of the service.\n",
    "- Apply different prompt engineering principles to get better outputs.\n",
    "\n",
    "### Cleanup\n",
    "\n",
    "You have completed this notebook. To move to the next part of the lab, do the following:\n",
    "\n",
    "- Close this notebook file and continue with **Task1b.ipynb**."
   ]
  }
 ],
 "metadata": {
  "availableInstances": [
   {
    "_defaultOrder": 0,
    "_isFastLaunch": true,
    "category": "General purpose",
    "gpuNum": 0,
    "hideHardwareSpecs": false,
    "memoryGiB": 4,
    "name": "ml.t3.medium",
    "vcpuNum": 2
   },
   {
    "_defaultOrder": 1,
    "_isFastLaunch": false,
    "category": "General purpose",
    "gpuNum": 0,
    "hideHardwareSpecs": false,
    "memoryGiB": 8,
    "name": "ml.t3.large",
    "vcpuNum": 2
   },
   {
    "_defaultOrder": 2,
    "_isFastLaunch": false,
    "category": "General purpose",
    "gpuNum": 0,
    "hideHardwareSpecs": false,
    "memoryGiB": 16,
    "name": "ml.t3.xlarge",
    "vcpuNum": 4
   },
   {
    "_defaultOrder": 3,
    "_isFastLaunch": false,
    "category": "General purpose",
    "gpuNum": 0,
    "hideHardwareSpecs": false,
    "memoryGiB": 32,
    "name": "ml.t3.2xlarge",
    "vcpuNum": 8
   },
   {
    "_defaultOrder": 4,
    "_isFastLaunch": true,
    "category": "General purpose",
    "gpuNum": 0,
    "hideHardwareSpecs": false,
    "memoryGiB": 8,
    "name": "ml.m5.large",
    "vcpuNum": 2
   },
   {
    "_defaultOrder": 5,
    "_isFastLaunch": false,
    "category": "General purpose",
    "gpuNum": 0,
    "hideHardwareSpecs": false,
    "memoryGiB": 16,
    "name": "ml.m5.xlarge",
    "vcpuNum": 4
   },
   {
    "_defaultOrder": 6,
    "_isFastLaunch": false,
    "category": "General purpose",
    "gpuNum": 0,
    "hideHardwareSpecs": false,
    "memoryGiB": 32,
    "name": "ml.m5.2xlarge",
    "vcpuNum": 8
   },
   {
    "_defaultOrder": 7,
    "_isFastLaunch": false,
    "category": "General purpose",
    "gpuNum": 0,
    "hideHardwareSpecs": false,
    "memoryGiB": 64,
    "name": "ml.m5.4xlarge",
    "vcpuNum": 16
   },
   {
    "_defaultOrder": 8,
    "_isFastLaunch": false,
    "category": "General purpose",
    "gpuNum": 0,
    "hideHardwareSpecs": false,
    "memoryGiB": 128,
    "name": "ml.m5.8xlarge",
    "vcpuNum": 32
   },
   {
    "_defaultOrder": 9,
    "_isFastLaunch": false,
    "category": "General purpose",
    "gpuNum": 0,
    "hideHardwareSpecs": false,
    "memoryGiB": 192,
    "name": "ml.m5.12xlarge",
    "vcpuNum": 48
   },
   {
    "_defaultOrder": 10,
    "_isFastLaunch": false,
    "category": "General purpose",
    "gpuNum": 0,
    "hideHardwareSpecs": false,
    "memoryGiB": 256,
    "name": "ml.m5.16xlarge",
    "vcpuNum": 64
   },
   {
    "_defaultOrder": 11,
    "_isFastLaunch": false,
    "category": "General purpose",
    "gpuNum": 0,
    "hideHardwareSpecs": false,
    "memoryGiB": 384,
    "name": "ml.m5.24xlarge",
    "vcpuNum": 96
   },
   {
    "_defaultOrder": 12,
    "_isFastLaunch": false,
    "category": "General purpose",
    "gpuNum": 0,
    "hideHardwareSpecs": false,
    "memoryGiB": 8,
    "name": "ml.m5d.large",
    "vcpuNum": 2
   },
   {
    "_defaultOrder": 13,
    "_isFastLaunch": false,
    "category": "General purpose",
    "gpuNum": 0,
    "hideHardwareSpecs": false,
    "memoryGiB": 16,
    "name": "ml.m5d.xlarge",
    "vcpuNum": 4
   },
   {
    "_defaultOrder": 14,
    "_isFastLaunch": false,
    "category": "General purpose",
    "gpuNum": 0,
    "hideHardwareSpecs": false,
    "memoryGiB": 32,
    "name": "ml.m5d.2xlarge",
    "vcpuNum": 8
   },
   {
    "_defaultOrder": 15,
    "_isFastLaunch": false,
    "category": "General purpose",
    "gpuNum": 0,
    "hideHardwareSpecs": false,
    "memoryGiB": 64,
    "name": "ml.m5d.4xlarge",
    "vcpuNum": 16
   },
   {
    "_defaultOrder": 16,
    "_isFastLaunch": false,
    "category": "General purpose",
    "gpuNum": 0,
    "hideHardwareSpecs": false,
    "memoryGiB": 128,
    "name": "ml.m5d.8xlarge",
    "vcpuNum": 32
   },
   {
    "_defaultOrder": 17,
    "_isFastLaunch": false,
    "category": "General purpose",
    "gpuNum": 0,
    "hideHardwareSpecs": false,
    "memoryGiB": 192,
    "name": "ml.m5d.12xlarge",
    "vcpuNum": 48
   },
   {
    "_defaultOrder": 18,
    "_isFastLaunch": false,
    "category": "General purpose",
    "gpuNum": 0,
    "hideHardwareSpecs": false,
    "memoryGiB": 256,
    "name": "ml.m5d.16xlarge",
    "vcpuNum": 64
   },
   {
    "_defaultOrder": 19,
    "_isFastLaunch": false,
    "category": "General purpose",
    "gpuNum": 0,
    "hideHardwareSpecs": false,
    "memoryGiB": 384,
    "name": "ml.m5d.24xlarge",
    "vcpuNum": 96
   },
   {
    "_defaultOrder": 20,
    "_isFastLaunch": false,
    "category": "General purpose",
    "gpuNum": 0,
    "hideHardwareSpecs": true,
    "memoryGiB": 0,
    "name": "ml.geospatial.interactive",
    "supportedImageNames": [
     "sagemaker-geospatial-v1-0"
    ],
    "vcpuNum": 0
   },
   {
    "_defaultOrder": 21,
    "_isFastLaunch": true,
    "category": "Compute optimized",
    "gpuNum": 0,
    "hideHardwareSpecs": false,
    "memoryGiB": 4,
    "name": "ml.c5.large",
    "vcpuNum": 2
   },
   {
    "_defaultOrder": 22,
    "_isFastLaunch": false,
    "category": "Compute optimized",
    "gpuNum": 0,
    "hideHardwareSpecs": false,
    "memoryGiB": 8,
    "name": "ml.c5.xlarge",
    "vcpuNum": 4
   },
   {
    "_defaultOrder": 23,
    "_isFastLaunch": false,
    "category": "Compute optimized",
    "gpuNum": 0,
    "hideHardwareSpecs": false,
    "memoryGiB": 16,
    "name": "ml.c5.2xlarge",
    "vcpuNum": 8
   },
   {
    "_defaultOrder": 24,
    "_isFastLaunch": false,
    "category": "Compute optimized",
    "gpuNum": 0,
    "hideHardwareSpecs": false,
    "memoryGiB": 32,
    "name": "ml.c5.4xlarge",
    "vcpuNum": 16
   },
   {
    "_defaultOrder": 25,
    "_isFastLaunch": false,
    "category": "Compute optimized",
    "gpuNum": 0,
    "hideHardwareSpecs": false,
    "memoryGiB": 72,
    "name": "ml.c5.9xlarge",
    "vcpuNum": 36
   },
   {
    "_defaultOrder": 26,
    "_isFastLaunch": false,
    "category": "Compute optimized",
    "gpuNum": 0,
    "hideHardwareSpecs": false,
    "memoryGiB": 96,
    "name": "ml.c5.12xlarge",
    "vcpuNum": 48
   },
   {
    "_defaultOrder": 27,
    "_isFastLaunch": false,
    "category": "Compute optimized",
    "gpuNum": 0,
    "hideHardwareSpecs": false,
    "memoryGiB": 144,
    "name": "ml.c5.18xlarge",
    "vcpuNum": 72
   },
   {
    "_defaultOrder": 28,
    "_isFastLaunch": false,
    "category": "Compute optimized",
    "gpuNum": 0,
    "hideHardwareSpecs": false,
    "memoryGiB": 192,
    "name": "ml.c5.24xlarge",
    "vcpuNum": 96
   },
   {
    "_defaultOrder": 29,
    "_isFastLaunch": true,
    "category": "Accelerated computing",
    "gpuNum": 1,
    "hideHardwareSpecs": false,
    "memoryGiB": 16,
    "name": "ml.g4dn.xlarge",
    "vcpuNum": 4
   },
   {
    "_defaultOrder": 30,
    "_isFastLaunch": false,
    "category": "Accelerated computing",
    "gpuNum": 1,
    "hideHardwareSpecs": false,
    "memoryGiB": 32,
    "name": "ml.g4dn.2xlarge",
    "vcpuNum": 8
   },
   {
    "_defaultOrder": 31,
    "_isFastLaunch": false,
    "category": "Accelerated computing",
    "gpuNum": 1,
    "hideHardwareSpecs": false,
    "memoryGiB": 64,
    "name": "ml.g4dn.4xlarge",
    "vcpuNum": 16
   },
   {
    "_defaultOrder": 32,
    "_isFastLaunch": false,
    "category": "Accelerated computing",
    "gpuNum": 1,
    "hideHardwareSpecs": false,
    "memoryGiB": 128,
    "name": "ml.g4dn.8xlarge",
    "vcpuNum": 32
   },
   {
    "_defaultOrder": 33,
    "_isFastLaunch": false,
    "category": "Accelerated computing",
    "gpuNum": 4,
    "hideHardwareSpecs": false,
    "memoryGiB": 192,
    "name": "ml.g4dn.12xlarge",
    "vcpuNum": 48
   },
   {
    "_defaultOrder": 34,
    "_isFastLaunch": false,
    "category": "Accelerated computing",
    "gpuNum": 1,
    "hideHardwareSpecs": false,
    "memoryGiB": 256,
    "name": "ml.g4dn.16xlarge",
    "vcpuNum": 64
   },
   {
    "_defaultOrder": 35,
    "_isFastLaunch": false,
    "category": "Accelerated computing",
    "gpuNum": 1,
    "hideHardwareSpecs": false,
    "memoryGiB": 61,
    "name": "ml.p3.2xlarge",
    "vcpuNum": 8
   },
   {
    "_defaultOrder": 36,
    "_isFastLaunch": false,
    "category": "Accelerated computing",
    "gpuNum": 4,
    "hideHardwareSpecs": false,
    "memoryGiB": 244,
    "name": "ml.p3.8xlarge",
    "vcpuNum": 32
   },
   {
    "_defaultOrder": 37,
    "_isFastLaunch": false,
    "category": "Accelerated computing",
    "gpuNum": 8,
    "hideHardwareSpecs": false,
    "memoryGiB": 488,
    "name": "ml.p3.16xlarge",
    "vcpuNum": 64
   },
   {
    "_defaultOrder": 38,
    "_isFastLaunch": false,
    "category": "Accelerated computing",
    "gpuNum": 8,
    "hideHardwareSpecs": false,
    "memoryGiB": 768,
    "name": "ml.p3dn.24xlarge",
    "vcpuNum": 96
   },
   {
    "_defaultOrder": 39,
    "_isFastLaunch": false,
    "category": "Memory Optimized",
    "gpuNum": 0,
    "hideHardwareSpecs": false,
    "memoryGiB": 16,
    "name": "ml.r5.large",
    "vcpuNum": 2
   },
   {
    "_defaultOrder": 40,
    "_isFastLaunch": false,
    "category": "Memory Optimized",
    "gpuNum": 0,
    "hideHardwareSpecs": false,
    "memoryGiB": 32,
    "name": "ml.r5.xlarge",
    "vcpuNum": 4
   },
   {
    "_defaultOrder": 41,
    "_isFastLaunch": false,
    "category": "Memory Optimized",
    "gpuNum": 0,
    "hideHardwareSpecs": false,
    "memoryGiB": 64,
    "name": "ml.r5.2xlarge",
    "vcpuNum": 8
   },
   {
    "_defaultOrder": 42,
    "_isFastLaunch": false,
    "category": "Memory Optimized",
    "gpuNum": 0,
    "hideHardwareSpecs": false,
    "memoryGiB": 128,
    "name": "ml.r5.4xlarge",
    "vcpuNum": 16
   },
   {
    "_defaultOrder": 43,
    "_isFastLaunch": false,
    "category": "Memory Optimized",
    "gpuNum": 0,
    "hideHardwareSpecs": false,
    "memoryGiB": 256,
    "name": "ml.r5.8xlarge",
    "vcpuNum": 32
   },
   {
    "_defaultOrder": 44,
    "_isFastLaunch": false,
    "category": "Memory Optimized",
    "gpuNum": 0,
    "hideHardwareSpecs": false,
    "memoryGiB": 384,
    "name": "ml.r5.12xlarge",
    "vcpuNum": 48
   },
   {
    "_defaultOrder": 45,
    "_isFastLaunch": false,
    "category": "Memory Optimized",
    "gpuNum": 0,
    "hideHardwareSpecs": false,
    "memoryGiB": 512,
    "name": "ml.r5.16xlarge",
    "vcpuNum": 64
   },
   {
    "_defaultOrder": 46,
    "_isFastLaunch": false,
    "category": "Memory Optimized",
    "gpuNum": 0,
    "hideHardwareSpecs": false,
    "memoryGiB": 768,
    "name": "ml.r5.24xlarge",
    "vcpuNum": 96
   },
   {
    "_defaultOrder": 47,
    "_isFastLaunch": false,
    "category": "Accelerated computing",
    "gpuNum": 1,
    "hideHardwareSpecs": false,
    "memoryGiB": 16,
    "name": "ml.g5.xlarge",
    "vcpuNum": 4
   },
   {
    "_defaultOrder": 48,
    "_isFastLaunch": false,
    "category": "Accelerated computing",
    "gpuNum": 1,
    "hideHardwareSpecs": false,
    "memoryGiB": 32,
    "name": "ml.g5.2xlarge",
    "vcpuNum": 8
   },
   {
    "_defaultOrder": 49,
    "_isFastLaunch": false,
    "category": "Accelerated computing",
    "gpuNum": 1,
    "hideHardwareSpecs": false,
    "memoryGiB": 64,
    "name": "ml.g5.4xlarge",
    "vcpuNum": 16
   },
   {
    "_defaultOrder": 50,
    "_isFastLaunch": false,
    "category": "Accelerated computing",
    "gpuNum": 1,
    "hideHardwareSpecs": false,
    "memoryGiB": 128,
    "name": "ml.g5.8xlarge",
    "vcpuNum": 32
   },
   {
    "_defaultOrder": 51,
    "_isFastLaunch": false,
    "category": "Accelerated computing",
    "gpuNum": 1,
    "hideHardwareSpecs": false,
    "memoryGiB": 256,
    "name": "ml.g5.16xlarge",
    "vcpuNum": 64
   },
   {
    "_defaultOrder": 52,
    "_isFastLaunch": false,
    "category": "Accelerated computing",
    "gpuNum": 4,
    "hideHardwareSpecs": false,
    "memoryGiB": 192,
    "name": "ml.g5.12xlarge",
    "vcpuNum": 48
   },
   {
    "_defaultOrder": 53,
    "_isFastLaunch": false,
    "category": "Accelerated computing",
    "gpuNum": 4,
    "hideHardwareSpecs": false,
    "memoryGiB": 384,
    "name": "ml.g5.24xlarge",
    "vcpuNum": 96
   },
   {
    "_defaultOrder": 54,
    "_isFastLaunch": false,
    "category": "Accelerated computing",
    "gpuNum": 8,
    "hideHardwareSpecs": false,
    "memoryGiB": 768,
    "name": "ml.g5.48xlarge",
    "vcpuNum": 192
   },
   {
    "_defaultOrder": 55,
    "_isFastLaunch": false,
    "category": "Accelerated computing",
    "gpuNum": 8,
    "hideHardwareSpecs": false,
    "memoryGiB": 1152,
    "name": "ml.p4d.24xlarge",
    "vcpuNum": 96
   },
   {
    "_defaultOrder": 56,
    "_isFastLaunch": false,
    "category": "Accelerated computing",
    "gpuNum": 8,
    "hideHardwareSpecs": false,
    "memoryGiB": 1152,
    "name": "ml.p4de.24xlarge",
    "vcpuNum": 96
   }
  ],
  "instance_type": "ml.t3.medium",
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
